<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAAAAACoDgAAFgAAACgAAAAwAAAAYAAAAAEACAAAAAAAgAoAAAAAAAAAAAAAAAEAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAACBAAAAgYAAAIIAAACCgAAAg
        wAAAIOAAAEAAAABAIAAAQEAAAEBgAABAgAAAQKAAAEDAAABA4AAAYAAAAGAgAABgQAAAYGAAAGCAAABg
        oAAAYMAAAGDgAACAAAAAgCAAAIBAAACAYAAAgIAAAICgAACAwAAAgOAAAKAAAACgIAAAoEAAAKBgAACg
        gAAAoKAAAKDAAACg4AAAwAAAAMAgAADAQAAAwGAAAMCAAADAoAAAwMAAAMDgAADgAAAA4CAAAOBAAADg
        YAAA4IAAAOCgAADgwAAA4OAAQAAAAEAAIABAAEAAQABgAEAAgABAAKAAQADAAEAA4ABAIAAAQCAgAEAg
        QABAIGAAQCCAAEAgoABAIMAAQCDgAEBAAABAQCAAQEBAAEBAYABAQIAAQECgAEBAwABAQOAAQGAAAEBg
        IABAYEAAQGBgAEBggABAYKAAQGDAAEBg4ABAgAAAQIAgAECAQABAgGAAQICAAECAoABAgMAAQIDgAECg
        AABAoCAAQKBAAECgYABAoIAAQKCgAECgwABAoOAAQMAAAEDAIABAwEAAQMBgAEDAgABAwKAAQMDAAEDA
        4ABA4AAAQOAgAEDgQABA4GAAQOCAAEDgoABA4MAAQODgAIAAAACAACAAgABAAIAAYACAAIAAgACgAIAA
        wACAAOAAgCAAAIAgIACAIEAAgCBgAIAggACAIKAAgCDAAIAg4ACAQAAAgEAgAIBAQACAQGAAgECAAIBA
        oACAQMAAgEDgAIBgAACAYCAAgGBAAIBgYACAYIAAgGCgAIBgwACAYOAAgIAAAICAIACAgEAAgIBgAICA
        gACAgKAAgIDAAICA4ACAoAAAgKAgAICgQACAoGAAgKCAAICgoACAoMAAgKDgAIDAAACAwCAAgMBAAIDA
        YACAwIAAgMCgAIDAwACAwOAAgOAAAIDgIACA4EAAgOBgAIDggACA4KAAgODAAIDg4ADAAAAAwAAgAMAA
        QADAAGAAwACAAMAAoADAAMAAwADgAMAgAADAICAAwCBAAMAgYADAIIAAwCCgAMAgwADAIOAAwEAAAMBA
        IADAQEAAwEBgAMBAgADAQKAAwEDAAMBA4ADAYAAAwGAgAMBgQADAYGAAwGCAAMBgoADAYMAAwGDgAMCA
        AADAgCAAwIBAAMCAYADAgIAAwICgAMCAwADAgOAAwKAAAMCgIADAoEAAwKBgAMCggADAoKAAwKDAAMCg
        4ADAwAAAwMAgAMDAQADAwGAAwMCAAMDAoADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8A///////////////2//////b////////////////////2////////////////////9vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb/////9vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29v//r6/2///29vb29vb29vb29vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29vb2//ZnHx8fb/b///b29vb29vb29vb29vb29vb29vb29vb29vb2
        9vb29vb29vb29vb2/wgfHx8fHx+v9v//9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb2
        //YfHx8fHx8fH7f2///29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29v+3Hx8fHx8fHx8f
        t/b/9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb/9q8fHx8fHx8fHye3///29vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29vb29vb2///2rx8fHx8fHx8fJ7f/9vb29vb29vb29vb29vb29vb2
        9vb29vb29vb29vb29vb29vb///ZvHx8fHx8fHx+3//b29vb29vb29v////////b29vb29vb29vb29vb2
        9vb29vb29v//9icfHx8fHx8f9v/29vb29vb/9vXakJDiCf/29vb29vb29vb29vb29vb29vb///+3Zx8f
        Hx8fHx8f9v/29vb///bs2ZCYmZmYmQn/9vb29vb29vb29vb29vb2///2tx8fHx8fHx8fHx+3//b2//8J
        45CYmZmZmZmZmZD29vb29vb29vb29vb29vb/9q8nHx8fHx8fHx8fbwj/////CeKZmJmZmZmZmZmZmZj1
        //b29vb29vb29vb29v+3Hx8fHx8fHx8fJ6/2////9uzZkJiZmZmZmZmZmZmZmZjr//b29vb29vb29vb2
        /wgfHx8fHx8fHye39v////bj2ZiZmZmZmZmZmZmZmZmZmZjs//b29vb29vb29vb2/wgfHx8fHx9nt///
        //8J4pCYmZmZmZmZmZmZmZmZmZmZmZAI//b29vb29vb29vb2//ZnHx8fb/b////27NmYmJmZmZmZmZmZ
        mZmZmZmZmZmZmOP/9vb29vb29vb29vb29v/2r7f2////9uvZkJmZmZmZmZmZmZmZmZmZmZmZmJCZ9f/2
        9vb29vb29vb29vb29vb/////9gnimJiZmZmZmZmZmZmZmZmZmZmZmZiY2vX2//b29vb29vb29vb29vb2
        9vb2///14pCYmZmZmZmZmZmZmZmZmZmZmZmYkOIJ9v/29vb29vb29vb29vb29vb29vb/9ZmQmJmZmZmZ
        mZmZmZmZmZmZmZmZmNns9v//9vb29vb29vb29vb29vb29vb29v8JkJmZmZmZmZmZmZmZmZmZmZmZmJCZ
        9fb///b29vb29vb29vb29vb29vb29vb29vbZmJmZmZmZmZmZmZmZmZmZmZiZ4gn////29vb29vb29vb2
        9vb29vb29vb29vb2/wmYmZmZmZmZmZmZmZmZmZmYkOsJ///29vb29vb29vb29vb29vb29vb29vb29vb2
        /wmQmZmZmZmZmZmZmZmZmZjs////9vb29vb29vb29vb29vb29vb29vb29vb29vb2/wiZmZmZmZmZmZmZ
        mZmZmZniCf//9vb29vb29vb29vb29vb29vb29vb29vb29vb29vbimJmZmZmZmZmZmZmZmZmYkOIJ///2
        9vb29vb29vb29vb29vb29vb29vb29vb29v8ImJiZmZmZmZmZmZmZmZmZmZiY4gn///b29vb29vb29vb2
        9vb29vb29vb29vb29vb/CeKQmZmZmZmZmZmZmZmZmZmZmJDjCP//9vb29vb29vb29vb29vb29vb29vb2
        9vb2//b12piZmZmZmZmZmZmZmZmZmZmYmeL2///29vb29vb29vb29vb29vb29vb29vb29vb/9vXZkJmZ
        mZmZmZmZmZmZmZmZmZiY4/b///b29vb29vb29vb29vb29vb29vb29vb29v/29dmYmZmZmZmZmZmZmZmZ
        mZmZmJjr9v/29vb29vb29vb29vb29vb29vb29vb29vb2//bsmJCZmZmZmZmZmZmZmZmZmZmY2ez2//b2
        9vb29vb29vb29vb29vb29vb29vb29vb/9uzZmJmZmZmZmZmZmZmZmZmZmZiQ7Pb29vb29vb29vb29vb2
        9vb29vb29vb29vb29v/265CYmZmZmZmZmZmZmZmZmZmZkOP/9vb29vb29vb29vb29vb29vb29vb29vb2
        9vb///brmZiZmZmZmZmZmZmZmZmZmZAI//b29vb29vb29vb29vb29vb29vb29vb29vb29vb/9uOYmJmZ
        mZmZmZmZmZmZmZj1//b29vb29vb29vb29vb29vb29vb29vb29vb29vb2//8I45iYmZmZmZmZmZmZmZjs
        //b29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb//wjimJiZmZmZmZmZmZD1//b29vb29vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29v//CeOQmJmZmZmZmZj29vb29vb29vb29vb29vb29vb29vb29vb2
        9vb29vb29vb29vb2//8J4piYmZmYmPX/9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb2
        9vb//wnjmJDZCf/29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29v//9vb2//b2
        9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb29vb2
        9vb29vb29vb29vb29vb29vb29vb29vb29vb29vb2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>